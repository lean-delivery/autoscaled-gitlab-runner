---
- name: Create instance
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    subnet_id: subnet-00000000000000000
    availabilityzone: eu-north-1c
    key_name: sssssss
    base_image: ubuntu
    ami_user:
      ubuntu: ubuntu
      amazon: ec2-user
    ami_name:
      ubuntu: ubuntu/images/hvm-ssd-gp3/ubuntu-noble-24.04-amd64-server-*
      amazon: al2023-ami-2023.*-kernel-6.1-x86_64
  tasks:

    - name: Get last ami
      amazon.aws.ec2_ami_info:
        owners: amazon
        filters:
          name: '{{ ami_name[base_image] }}'
      register: ami

    - name: Spot Request Creation with more options
      amazon.aws.ec2_spot_instance:
        launch_specification:
          iam_instance_profile:
            name: gitlab-runner
          image_id: '{{ ami.images[-1].image_id }}'
          instance_type: t3.micro
          key_name: '{{ key_name }}'
          block_device_mappings:
            - device_name: /dev/xvda
              ebs:
                delete_on_termination: true
                volume_type: gp3
                volume_size: 30
          network_interfaces:
            - associate_public_ip_address: false
              delete_on_termination: true
              subnet_id: >-
                {{ subnet_id }}
              device_index: 0
          placement:
            availability_zone: '{{ availabilityzone }}'
          monitoring:
            enabled: false
        spot_price: 0.01
        tags:
          Name: Packer_lootbox
      register: spot_instance

    - name: Get the Spot Instance request info
      amazon.aws.ec2_spot_instance_info:
        spot_instance_request_ids:
          - '{{ spot_instance.spot_request.spot_instance_request_id }}'
      register: spot_request
      retries: 30
      until: spot_request.spot_request[0].instance_id is defined

    - name: Add tags
      amazon.aws.ec2_tag:
        resource: '{{ spot_request.spot_request[0].instance_id }}'
        tags:
          Name: gitlab-runner
        state: present

    - name: Gather information about instance
      amazon.aws.ec2_instance_info:
        instance_ids:
          - '{{ spot_request.spot_request[0].instance_id }}'
      register: instance_info

    - name: Add host to group build
      ansible.builtin.add_host:
        name: '{{ spot_request.spot_request[0].instance_id }}'
        groups: build
        ansible_user: '{{ ami_user[base_image] }}'
        ansible_host: '{{ instance_info.instances[0].private_ip_address }}'

- name: Include build playbook
  ansible.builtin.import_playbook: build-playbook.yml

- name: Create ami
  hosts: localhost
  connection: local
  gather_facts: true
  vars:
    ansible_python_interpreter: auto_silent
    base_image: ubuntu
  tasks:
    - name: Create ami
      amazon.aws.ec2_ami:
        instance_id: '{{ spot_request.spot_request[0].instance_id }}'
        wait: true
        name: >-
          gitlab-runner-{{ base_image }}-{{ ansible_date_time.iso8601_basic_short | split('T') | join }}
        tags:
          Name: 'gitlab-runner-{{ base_image }}'
      register: built_ami

    - name: Show built_ami
      debug:
        var: built_ami

    - name: Spot Request Termination
      amazon.aws.ec2_spot_instance:
        spot_instance_request_ids:
          - '{{ spot_instance.spot_request.spot_instance_request_id }}'
        terminate_instances: true
        state: absent
