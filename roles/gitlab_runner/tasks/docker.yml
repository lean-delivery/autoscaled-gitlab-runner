---
# - name: Install required packages
#   ansible.builtin.apt:
#     update_cache: true
#     name:
#       - acl
#       - ca-certificates
#       - curl
#       - amazon-ecr-credential-helper
#     state: present
#   register: result
#   until: result is succeeded
#   retries: 10
#   delay: 10

# - name: Add apt key
#   ansible.builtin.get_url:
#     url: https://download.docker.com/linux/debian/gpg
#     dest: /etc/apt/keyrings/docker.asc
#     mode: '0644'

# - name: Add deb repo
#   copy:
#     content: >-
#       deb [arch={{ architecture[ansible_architecture] }} signed-by=/etc/apt/keyrings/docker.asc]
#       https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
#     dest: /etc/apt/sources.list.d/docker.list
#     mode: '0644'

# - name: Update apt cache
#   ansible.builtin.apt:
#     update_cache: true

# - name: Install Docker and related packages
#   ansible.builtin.apt:
#     name:
#       - docker-ce
#       - docker-ce-cli
#       - containerd.io
#     state: present
#     update_cache: true

- name: Add users to "docker" group
  ansible.builtin.user:
    name: '{{ user_item.name }}'
    group: docker
  loop: '{{ users }}'
  loop_control:
    loop_var: user_item

- name: Ensure .docker present in home
  ansible.builtin.file:
    path: '{{ user_item.home }}/.docker'
    state: directory
    owner: '{{ user_item.name }}'
    group: '{{ user_item.name }}'
    mode: '0755'
  loop: '{{ users }}'
  loop_control:
    loop_var: user_item

- name: Set docker credhelper config
  ansible.builtin.copy:
    content: >-
      {{ docker_credhelper_config | to_nice_json }}
    dest: '{{ user_item.home }}/.docker/config.json'
    owner: '{{ user_item.name }}'
    group: '{{ user_item.name }}'
    mode: '0644'
  loop: '{{ users }}'
  loop_control:
    loop_var: user_item

# - name: Ensure .aws present in home
#   ansible.builtin.file:
#     path: '{{ user_item.home }}/.aws'
#     state: directory
#     owner: '{{ user_item.name }}'
#     group: '{{ user_item.name }}'
#     mode: '0755'
#   loop: '{{ users }}'
#   loop_control:
#     loop_var: user_item

# - name: Set AWS credentials
#   ansible.builtin.copy:
#     src: aws_config
#     dest: '{{ user_item.home }}/.aws/config'
#     owner: '{{ user_item.name }}'
#     group: '{{ user_item.name }}'
#     mode: '0644'
#   loop: '{{ users }}'
#   loop_control:
#     loop_var: user_item

- name: Enable docker service
  ansible.builtin.systemd:
    name: docker
    daemon_reload: true
    enabled: true
    state: started
